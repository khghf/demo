// Fill out your copyright notice in the Description page of Project Settings.

#pragma once
#include<NativeGameplayTags.h>
namespace WarriorGameplayTags
{
	//***************************Input Tags***************************//
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Move);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_EquipAxe);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Equip);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_UnequipAxe);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Unequip);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_LightAttack_Axe);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_HeavyAttack_Axe);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Roll);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_MustBeHeld);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_MustBeHeld_Block);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_MustBeHeld_Sprint);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable_TargetLock);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable_Rage);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SwitchTarget);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SpecialWeaponAbility_Light);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SpecialWeaponAbility_Heavy);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_PickUp_Stones);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Switchable_BetweenWalkAndRun);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Dodge);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Jump);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_AttackRising);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_AttackDown);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_DodgeAttackInAir);

	//***************************Player Tags***************************//

	//Ability
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Equip_Axe);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Unequip_Axe);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Light_Axe);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Heavy_Axe);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Light_Sword);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Heavy_Sword);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_HitPause);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Roll);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Block);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_TargetLock);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Rage);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_SpecialWeaponAbility_Light);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_SpecialWeaponAbility_Heavy);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_PickUp_Stones);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Dodge);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Sprint);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Jump);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_AttackRising);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_AttackDown);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_DodgeAttackInAir);

	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Cooldown_SpecialWeaponAbility_Light);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Cooldown_SpecialWeaponAbility_Heavy);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Cooldown_SpecialWeaponAbility_AttackRising);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Cooldown_SpecialWeaponAbility_AttackDown);

	//Weapon
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Axe);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Sword);
	//Event
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_Equip_Axe);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_Unequip_Axe);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_HitPause);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_SuccessfulBlock);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_PerfectBlock);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_SwitchTarget_Left);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_SwitchTarget_Right);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_ActivateRage);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_AOE);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_ConsumeStones);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_PerfectDodge);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_Sprint);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_CancelRecovery);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_EnableGrabAbility);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_DisableGrabAbility);
	//Status
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_JumpToFinisher);//跳转到终结技
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rolling);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Blocking);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_TargetLock);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rage_Activating);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rage_Active);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rage_Full);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rage_None);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Walking);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Running);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Sprinting);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Dodging);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Jumping);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_ComboAllowed);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_RecoveryCancelAllowed);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Dodging_Invinciable);//闪避无敌状态(非全程无敌)
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_MovementMode_OnGround);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_MovementMode_InAir);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Attacking);
	//处于恢复(后摇)状态
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Recovering_BlockBreached);
	//SetByCaller
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_SetByCaller_AttackType_Light);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_SetByCaller_AttackType_Heavy);

	//***************************Enemy Tags***************************//

	
	//Ability
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_Melee);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_Ranged);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_SummonEnemies);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_Spawn_Stone);

	//Weapon
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Weapon);

	//Event
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Event_SummonEnemies);


	//Status
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_Strafing);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_UnderAttack);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_Unblockable);

	//***************************Shared Tags***************************//

	//Event
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_MeleeHit);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_HitReact);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_SpawnProjectile);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_EndCurrentActivatedAbility);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Block_Successful);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Block_Perfect);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_Block_Breached);
	//SetByCaller
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_SetByCaller_BaseDamage);
	//Ability
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_HitReact);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_Death);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_Block);
	//Status
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Dead);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Front);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Left);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Right);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Back);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Invincible);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_BeGrabing);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Walking);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Running);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Sprinting);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Dodging);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Blocking);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_TargetLock);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Unblockable);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Block_Starting);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Block_Holding);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Block_Ending);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_TurnInPlace);
	//***************************Game Data Tags***************************//
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameData_Level_SurvivalGameModeMap);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameData_Level_MainMenuMap);
	PRACTICEDEMO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameData_SaveGame_Slot_1);

}


